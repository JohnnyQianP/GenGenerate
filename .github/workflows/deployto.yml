name: createimage
env:
  DOCKER_REG: registry.cn-shanghai.aliyuncs.com/gen_dockerimage/gen_repository
  REG: registry.cn-shanghai.aliyuncs.com
on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      Version:
        description: 'Version to input'
        required: false
        default: ''
jobs:
  build:

    runs-on: ubuntu-20.04
    outputs:
      version: ${{ steps.pushimg.outputs.version }}
    steps:
    - uses: actions/checkout@v2
    - name: login docker
      run: 
        echo "${{ secrets.PASSWORD }}" | docker login $REG --username "${{ secrets.USERNAME }}" --password-stdin
    - name: Build the Docker image
      run:
        docker build . --file src/GenGenerate.Core/Dockerfile --tag gengenerateimage
    - name: Push Image
      id: pushimg
      run: |
        VERSIONa=${{ github.event.inputs.Version }}
        [ "$VERSIONa" == "" ] && VERSIONa=latest
        echo "::set-output name=version::${{VERSIONa}}"
        docker tag gengenerateimage $DOCKER_REG:$VERSIONa
        docker push $DOCKER_REG:$VERSIONa
  deploy:
    runs-on: ubuntu-20.04
    needs: build
    env:
      CONTAINER_NAME: gengenerate-app
    steps:
    - name: deploy docker image
      uses: appleboy/ssh-action@v0.0.7
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.HOST_USERNAME }}
        password: ${{ secrets.HOST_PASSWORD }}
        envs: CONTAINER_NAME, DOCKER_REG
        script: |
          if [ $(docker ps -a | grep -c $CONTAINER_NAME) -gt 0 ]; then docker stop $CONTAINER_NAME;docker rm $CONTAINER_NAME;fi
          docker run --name $CONTAINER_NAME -d -p 5000:80 $DOCKER_REG:${{needs.build.outputs.version}} 
